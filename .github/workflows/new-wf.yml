# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Upload R Nightly builds

on:
  push:
  workflow_dispatch:
    inputs:
      prefix:
        description: Job prefix to use.
        required: false
        default: ''
#   schedule:
#     #Crossbow packagin runs at 0 8 * * *
#     - cron: '0 14 * * *'

jobs:
  upload:
    env:
      PREFIX: ${{ github.event.inputs.prefix || ''}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: arrow
          repository: assignUser/arrow
          ref: r-nightly-2
          submodules: recursive
      - name: Checkout Crossbow
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: crossbow
          repository: ursacomputing/crossbow
          ref: master 
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: 'pip'
          python-version: 3.8
      - name: Install Archery
        shell: bash
        run: pip install -e arrow/dev/archery[all]
      - run: mkdir -p binaries
      - name: Download Artifacts
        run: |
          if [ -z $PREFIX ]; then
            PREFIX=nightly-packaging-$(date +%Y-%m-%d)-0
          fi
          echo $PREFIX

          archery crossbow download-artifacts -f r-nightly-packages -t binaries $PREFIX
          ls -A binaries
          if [ -n "$(ls -A binaries/*/*/)" ]; then
            echo "found files"
            echo "GOT_FILES=true" >> $GITHUB_ENV
          else
            echo "no files found"
            echo "GOT_FILES=false" >> $GITHUB_ENV
          fi
      - name: Build Repository
        if: env.GOT_FILES == 'true'
        shell: Rscript {0}
        run: |
          repo_root <- "repo"
          art_path <- list.files("binaries",
            recursive = TRUE,
            include.dirs = TRUE,
            pattern = "r-nightly-packages$",
            full.names = TRUE
          )

          current_path <- list.files(art_path, full.names = TRUE, recursive = TRUE)
          files <- sub("r-(pkg|lib)", repo_root, current_path)
          new_paths <- gsub("__", "/", files)
          new_paths <- sub(art_path, ".", new_paths)
          dirs <- dirname(new_paths)
          dir_result <- sapply(dirs, dir.create, recursive = TRUE)

          if (!all(dir_result)) {
            stop("There was an issue while creating the folders!")
          }

          copy_result <- file.copy(current_path, new_paths)

          if (!all(copy_result)) {
            stop("There was an issue while copying the files!")
          }

          tools::write_PACKAGES(file.path(repo_root, "src/contrib"), type = "source", verbose = TRUE)

          repo_dirs <- list.dirs("repo")
          pkg_dirs <- repo_dirs[grepl(".+contrib\\/\\d.+", repo_dirs)]

          for (dir in pkg_dirs) {
            on_win <- grepl("windows", dir)
            tools::write_PACKAGES(dir, type = ifelse(on_win, "win.binary", "mac.binary"), verbose = TRUE )
          }

      - run: ls -R repo
