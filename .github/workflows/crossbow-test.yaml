name: Crossbow
on:
  workflow_dispatch:
  push:
    branches:
      - "*-github-*"



jobs:
   r-packages:
    name: ${{ matrix.platform }} ${{ matrix.r_version.r }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - windows-latest
          # This is newer than what CRAN builds on, but Travis is no longer an option for us, so...

          # - devops-managed # No M1 until the runner application runs native
        r_version:
          - { rtools: 40, r: "4.1" }

    steps:
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r_version.r }}
          rtools-version: ${{ matrix.r_version.rtools }}
          Ncpus: 2
      - name: Setup local repo
        shell: bash
        run: mkdir repo 
      - name: Update repo index
        shell: Rscript {0}
        run: |
          # getwd() is necessary as this macro is used within jobs using a docker container
          file.path(getwd(), "/repo/src/contrib", fsep = "/")
      - run: ls -R repo

      - name: Build Binary
        id: build
        shell: Rscript {0}
        run: |
          on_windows <- tolower(Sys.info()[["sysname"]]) == "windows"
          # Install dependencies by installing (yesterday's) binary, then removing it
          #install.packages(c("arrow", "cpp11"),
           # type = "binary",
          #  repos = c("https://nightlies.apache.org/arrow/r", "https://cloud.r-project.org")
          #)
          #remove.packages("arrow")
          # Setup local repo
          dev_repo <- paste0(
            ifelse(on_windows, "file:", "file://"),
            getwd(),
            "/repo")
          cat("Local repo: ", dev_repo)

          # This is necessary to use the local folder as a repo in both
          # install_arrow & tools/*libs.R
          # The option has to be added to the .Rprofile as it will 
          # otherwise not work while installing packages.
          options(arrow.dev_repo = dev_repo)
          str <- paste0('options(arrow.dev_repo = "', dev_repo,'")')
          profile_path <- "~/.Rprofile"
          write(str, file = profile_path, append = TRUE)
          
          # Build
          Sys.setenv(MAKEFLAGS = paste0("-j", parallel::detectCores()))
          INSTALL_opts <- "--build"
          if (!on_windows) {
            # Windows doesn't support the --strip arg
            INSTALL_opts <- c(INSTALL_opts, "--strip")
          }
         
          install.packages(
            "arrow",
            type = "source",
            repos = dev_repo,
            INSTALL_opts = INSTALL_opts
          )
          # Test
          library(arrow)
          read_parquet(system.file("v0.7.1.parquet", package = "arrow"))
          # encode contrib.url for artifact name
          cmd <- paste0(
            "::set-output name=path::", 
            gsub(
              "/", "__",
              contrib.url("", type = "binary")
            ),
            "\n"
          )
          cat(cmd)
