name: Nightly gh_pages test

on: 
  workflow_dispatch:
    inputs:
      version: 
        description: 'Version string'
        required: true
        default: '9999'

permissions:
  pages: write

jobs:
  source:
    name: Source Packages
    runs-on: ubuntu-latest
    steps:
      - name: Configure git user
        shell: bash
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Checkout arrow
        uses: actions/checkout@v3
        with:
          repository: apache/arrow
          path: arrow
      - name: Modify version
        shell: bash
        env:
          DATE: ${{ github.event.inputs.version }}
        run: |
          cd arrow/r
          sed -i.bak -E -e \
            's/(^Version: [0-9]+\.[0-9]+\.[0-9]+).*$/\1.'"${DATE}"'/' \
            DESCRIPTION
          rm -f DESCRIPTION.bak
      - name: Cache repo
        uses: actions/cache@v3
        id: cache-repo
        with:
          path: repo
          key: test
      - name: Checkout package repo
        if: steps.cache-repo.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: assignUser/test-repo-a
          ref: gh_pages
          path: repo
      - name: Update repo
        if: steps.cache-repo.outputs.cache-hit == 'true'
        shell: bash
        run: |
          cd repo
          git pull
      - uses: r-lib/actions/setup-r@v2
        with:
          install-r: false
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            github::eddelbuettel/drat
            any::git2r
      - name: Build R source package
        shell: bash
        run: |
          cd arrow/r
          # Copy in the Arrow C++ source
          make sync-cpp
          R CMD build --no-build-vignettes .
      - name: Update repo
        shell: Rscript {0}
        run: |
          pkg <- list.files("arrow/r", "arrow-.+\\.tar\\.gz")
          stopifnot(length(pkg) == 1)
          drat::insertPackage(pkg,
                              repodir = "./repo",
                              commit = TRUE,
                              action = "prune",
                              location = "gh-pages"
          )


